name: Auto Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (x.y.z)'
        required: false

jobs:
  release:
    if: ${{ (github.event_name == 'workflow_dispatch') || (startsWith(github.event.head_commit.message, 'Merge pull request') && (contains(github.event.head_commit.message, 'release/') || contains(github.event.head_commit.message, 'hotfix/'))) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract and validate version
        id: extract_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.version }}" != "" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            COMMIT_MSG="${{ github.event.head_commit.message }}"
            if [[ $COMMIT_MSG =~ from\ [^/]*/([0-9]+\.[0-9]+\.[0-9]+) ]]; then
              VERSION=${BASH_REMATCH[1]}
            else
              echo "Error: Invalid branch name format" && exit 1
            fi
          fi

          # Strict semver validation
          if ! [[ $VERSION =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-((0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?$ ]]; then
            echo "Error: Version $VERSION does not follow semver" && exit 1
          fi

          # Validate against package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if ! [[ "$VERSION" > "$CURRENT_VERSION" ]]; then
            echo "Error: New version $VERSION must be greater than current version $CURRENT_VERSION" && exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git tag -a ${{ steps.extract_version.outputs.version }} -m "Release ${{ steps.extract_version.outputs.version }}"
          git push origin ${{ steps.extract_version.outputs.version }}

      - name: Generate Release Draft
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ steps.extract_version.outputs.version }}
          prerelease: false

      - name: Publish Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release edit ${{ steps.extract_version.outputs.version }} --draft=false

  publish:
    needs: release
    uses: ./.github/workflows/call-publish.yml
    permissions:
      contents: read
      packages: write
    with:
      access: public
      registry: registry.npmjs.org
    secrets:
      TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
